// This file has been automatically generated by writePacketClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {Packet} from '../Packet';

export class DirLandQueryPacket implements Packet
{
    name = 'DirLandQuery';
    flags = MessageFlags.Zerocoded | MessageFlags.FrequencyLow;
    id = 4294901808;

    AgentData: {
        AgentID: UUID;
        SessionID: UUID;
    };
    QueryData: {
        QueryID: UUID;
        QueryFlags: number;
        SearchType: number;
        Price: number;
        Area: number;
        QueryStart: number;
    };

    getSize(): number
    {
        return 68;
    }

     writeToBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         this.AgentData['AgentID'].writeToBuffer(buf, pos);
         pos += 16;
         this.AgentData['SessionID'].writeToBuffer(buf, pos);
         pos += 16;
         this.QueryData['QueryID'].writeToBuffer(buf, pos);
         pos += 16;
         buf.writeUInt32LE(this.QueryData['QueryFlags'], pos);
         pos += 4;
         buf.writeUInt32LE(this.QueryData['SearchType'], pos);
         pos += 4;
         buf.writeInt32LE(this.QueryData['Price'], pos);
         pos += 4;
         buf.writeInt32LE(this.QueryData['Area'], pos);
         pos += 4;
         buf.writeInt32LE(this.QueryData['QueryStart'], pos);
         pos += 4;
         return pos - startPos;
     }

     readFromBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         const newObjAgentData: {
             AgentID: UUID,
             SessionID: UUID
         } = {
             AgentID: UUID.zero(),
             SessionID: UUID.zero()
         };
         newObjAgentData['AgentID'] = new UUID(buf, pos);
         pos += 16;
         newObjAgentData['SessionID'] = new UUID(buf, pos);
         pos += 16;
         this.AgentData = newObjAgentData;
         const newObjQueryData: {
             QueryID: UUID,
             QueryFlags: number,
             SearchType: number,
             Price: number,
             Area: number,
             QueryStart: number
         } = {
             QueryID: UUID.zero(),
             QueryFlags: 0,
             SearchType: 0,
             Price: 0,
             Area: 0,
             QueryStart: 0
         };
         newObjQueryData['QueryID'] = new UUID(buf, pos);
         pos += 16;
         newObjQueryData['QueryFlags'] = buf.readUInt32LE(pos);
         pos += 4;
         newObjQueryData['SearchType'] = buf.readUInt32LE(pos);
         pos += 4;
         newObjQueryData['Price'] = buf.readInt32LE(pos);
         pos += 4;
         newObjQueryData['Area'] = buf.readInt32LE(pos);
         pos += 4;
         newObjQueryData['QueryStart'] = buf.readInt32LE(pos);
         pos += 4;
         this.QueryData = newObjQueryData;
         return pos - startPos;
     }
}

