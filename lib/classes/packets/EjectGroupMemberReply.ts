// This file has been automatically generated by writePacketClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {Packet} from '../Packet';

export class EjectGroupMemberReplyPacket implements Packet
{
    name = 'EjectGroupMemberReply';
    flags = MessageFlags.Trusted | MessageFlags.FrequencyLow;
    id = 4294902106;

    AgentData: {
        AgentID: UUID;
    };
    GroupData: {
        GroupID: UUID;
    };
    EjectData: {
        Success: boolean;
    };

    getSize(): number
    {
        return 33;
    }

     writeToBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         this.AgentData['AgentID'].writeToBuffer(buf, pos);
         pos += 16;
         this.GroupData['GroupID'].writeToBuffer(buf, pos);
         pos += 16;
         buf.writeUInt8((this.EjectData['Success']) ? 1 : 0, pos++);
         return pos - startPos;
     }

     readFromBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         const newObjAgentData: {
             AgentID: UUID
         } = {
             AgentID: UUID.zero()
         };
         newObjAgentData['AgentID'] = new UUID(buf, pos);
         pos += 16;
         this.AgentData = newObjAgentData;
         const newObjGroupData: {
             GroupID: UUID
         } = {
             GroupID: UUID.zero()
         };
         newObjGroupData['GroupID'] = new UUID(buf, pos);
         pos += 16;
         this.GroupData = newObjGroupData;
         const newObjEjectData: {
             Success: boolean
         } = {
             Success: false
         };
         newObjEjectData['Success'] = (buf.readUInt8(pos++) === 1);
         this.EjectData = newObjEjectData;
         return pos - startPos;
     }
}

