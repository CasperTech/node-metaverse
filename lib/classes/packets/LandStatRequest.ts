// This file has been automatically generated by writePacketClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {Packet} from '../Packet';

export class LandStatRequestPacket implements Packet
{
    name = 'LandStatRequest';
    flags = MessageFlags.FrequencyLow;
    id = 4294902181;

    AgentData: {
        AgentID: UUID;
        SessionID: UUID;
    };
    RequestData: {
        ReportType: number;
        RequestFlags: number;
        Filter: string;
        ParcelLocalID: number;
    };

    getSize(): number
    {
        return (this.RequestData['Filter'].length + 1) + 44;
    }

     writeToBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         this.AgentData['AgentID'].writeToBuffer(buf, pos);
         pos += 16;
         this.AgentData['SessionID'].writeToBuffer(buf, pos);
         pos += 16;
         buf.writeUInt32LE(this.RequestData['ReportType'], pos);
         pos += 4;
         buf.writeUInt32LE(this.RequestData['RequestFlags'], pos);
         pos += 4;
         buf.write(this.RequestData['Filter'], pos);
         pos += this.RequestData['Filter'].length;
         buf.writeInt32LE(this.RequestData['ParcelLocalID'], pos);
         pos += 4;
         return pos - startPos;
     }

     readFromBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         const newObjAgentData: {
             AgentID: UUID,
             SessionID: UUID
         } = {
             AgentID: UUID.zero(),
             SessionID: UUID.zero()
         };
         newObjAgentData['AgentID'] = new UUID(buf, pos);
         pos += 16;
         newObjAgentData['SessionID'] = new UUID(buf, pos);
         pos += 16;
         this.AgentData = newObjAgentData;
         const newObjRequestData: {
             ReportType: number,
             RequestFlags: number,
             Filter: string,
             ParcelLocalID: number
         } = {
             ReportType: 0,
             RequestFlags: 0,
             Filter: '',
             ParcelLocalID: 0
         };
         newObjRequestData['ReportType'] = buf.readUInt32LE(pos);
         pos += 4;
         newObjRequestData['RequestFlags'] = buf.readUInt32LE(pos);
         pos += 4;
         newObjRequestData['Filter'] = buf.toString('utf8', pos, length);
         pos += length;
         newObjRequestData['ParcelLocalID'] = buf.readInt32LE(pos);
         pos += 4;
         this.RequestData = newObjRequestData;
         return pos - startPos;
     }
}

