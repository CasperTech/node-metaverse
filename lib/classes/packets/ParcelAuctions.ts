// This file has been automatically generated by writePacketClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {Packet} from '../Packet';

export class ParcelAuctionsPacket implements Packet
{
    name = 'ParcelAuctions';
    flags = MessageFlags.Trusted | MessageFlags.FrequencyLow;
    id = 4294901994;

    ParcelData: {
        ParcelID: UUID;
        WinnerID: UUID;
    }[];

    getSize(): number
    {
        return ((32) * this.ParcelData.length) + 1;
    }

     writeToBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         const count = this.ParcelData.length;
         buf.writeUInt8(this.ParcelData.length, pos++);
         for (let i = 0; i < count; i++)
         {
             this.ParcelData[i]['ParcelID'].writeToBuffer(buf, pos);
             pos += 16;
             this.ParcelData[i]['WinnerID'].writeToBuffer(buf, pos);
             pos += 16;
         }
         return pos - startPos;
     }

     readFromBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         const count = buf.readUInt8(pos++);
         this.ParcelData = [];
         for (let i = 0; i < count; i++)
         {
             const newObjParcelData: {
                 ParcelID: UUID,
                 WinnerID: UUID
             } = {
                 ParcelID: UUID.zero(),
                 WinnerID: UUID.zero()
             };
             newObjParcelData['ParcelID'] = new UUID(buf, pos);
             pos += 16;
             newObjParcelData['WinnerID'] = new UUID(buf, pos);
             pos += 16;
             this.ParcelData.push(newObjParcelData);
         }
         return pos - startPos;
     }
}

