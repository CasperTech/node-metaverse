// This file has been automatically generated by writePacketClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {Packet} from '../Packet';

export class ParcelRenamePacket implements Packet
{
    name = 'ParcelRename';
    flags = MessageFlags.Trusted | MessageFlags.FrequencyLow;
    id = 4294902162;

    ParcelData: {
        ParcelID: UUID;
        NewName: string;
    }[];

    getSize(): number
    {
        return ((this.calculateVarVarSize(this.ParcelData, 'NewName', 1) + 16) * this.ParcelData.length) + 1;
    }

    calculateVarVarSize(block: object[], paramName: string, extraPerVar: number): number
    {
        let size = 0;
        block.forEach((bl: any) =>
        {
            size += bl[paramName].length + extraPerVar;
        });
        return size;
    }

     writeToBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         const count = this.ParcelData.length;
         buf.writeUInt8(this.ParcelData.length, pos++);
         for (let i = 0; i < count; i++)
         {
             this.ParcelData[i]['ParcelID'].writeToBuffer(buf, pos);
             pos += 16;
             buf.write(this.ParcelData[i]['NewName'], pos);
             pos += this.ParcelData[i]['NewName'].length;
         }
         return pos - startPos;
     }

     readFromBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         const count = buf.readUInt8(pos++);
         this.ParcelData = [];
         for (let i = 0; i < count; i++)
         {
             const newObjParcelData: {
                 ParcelID: UUID,
                 NewName: string
             } = {
                 ParcelID: UUID.zero(),
                 NewName: ''
             };
             newObjParcelData['ParcelID'] = new UUID(buf, pos);
             pos += 16;
             newObjParcelData['NewName'] = buf.toString('utf8', pos, length);
             pos += length;
             this.ParcelData.push(newObjParcelData);
         }
         return pos - startPos;
     }
}

