// This file has been automatically generated by writePacketClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {Packet} from '../Packet';

export class UUIDGroupNameRequestPacket implements Packet
{
    name = 'UUIDGroupNameRequest';
    flags = MessageFlags.FrequencyLow;
    id = 4294901997;

    UUIDNameBlock: {
        ID: UUID;
    }[];

    getSize(): number
    {
        return ((16) * this.UUIDNameBlock.length) + 1;
    }

     writeToBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         const count = this.UUIDNameBlock.length;
         buf.writeUInt8(this.UUIDNameBlock.length, pos++);
         for (let i = 0; i < count; i++)
         {
             this.UUIDNameBlock[i]['ID'].writeToBuffer(buf, pos);
             pos += 16;
         }
         return pos - startPos;
     }

     readFromBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         const count = buf.readUInt8(pos++);
         this.UUIDNameBlock = [];
         for (let i = 0; i < count; i++)
         {
             const newObjUUIDNameBlock: {
                 ID: UUID
             } = {
                 ID: UUID.zero()
             };
             newObjUUIDNameBlock['ID'] = new UUID(buf, pos);
             pos += 16;
             this.UUIDNameBlock.push(newObjUUIDNameBlock);
         }
         return pos - startPos;
     }
}

