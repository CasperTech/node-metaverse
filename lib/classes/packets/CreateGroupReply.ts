// This file has been automatically generated by writePacketClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {Packet} from '../Packet';

export class CreateGroupReplyPacket implements Packet
{
    name = 'CreateGroupReply';
    flags = MessageFlags.Trusted | MessageFlags.FrequencyLow;
    id = 4294902100;

    AgentData: {
        AgentID: UUID;
    };
    ReplyData: {
        GroupID: UUID;
        Success: boolean;
        Message: string;
    };

    getSize(): number
    {
        return (this.ReplyData['Message'].length + 1) + 33;
    }

     writeToBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         this.AgentData['AgentID'].writeToBuffer(buf, pos);
         pos += 16;
         this.ReplyData['GroupID'].writeToBuffer(buf, pos);
         pos += 16;
         buf.writeUInt8((this.ReplyData['Success']) ? 1 : 0, pos++);
         buf.write(this.ReplyData['Message'], pos);
         pos += this.ReplyData['Message'].length;
         return pos - startPos;
     }

     readFromBuffer(buf: Buffer, pos: number): number
     {
         const startPos = pos;
         const newObjAgentData: {
             AgentID: UUID
         } = {
             AgentID: UUID.zero()
         };
         newObjAgentData['AgentID'] = new UUID(buf, pos);
         pos += 16;
         this.AgentData = newObjAgentData;
         const newObjReplyData: {
             GroupID: UUID,
             Success: boolean,
             Message: string
         } = {
             GroupID: UUID.zero(),
             Success: false,
             Message: ''
         };
         newObjReplyData['GroupID'] = new UUID(buf, pos);
         pos += 16;
         newObjReplyData['Success'] = (buf.readUInt8(pos++) === 1);
         newObjReplyData['Message'] = buf.toString('utf8', pos, length);
         pos += length;
         this.ReplyData = newObjReplyData;
         return pos - startPos;
     }
}

