// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class AttachedSoundGainChangeMessage implements MessageBase
{
    name = 'AttachedSoundGainChange';
    messageFlags = MessageFlags.Trusted | MessageFlags.FrequencyMedium;
    id = Message.AttachedSoundGainChange;

    DataBlock: {
        ObjectID: UUID;
        Gain: number;
    };

    getSize(): number
    {
        return 20;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        this.DataBlock['ObjectID'].writeToBuffer(buf, pos);
        pos += 16;
        buf.writeFloatLE(this.DataBlock['Gain'], pos);
        pos += 4;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjDataBlock: {
            ObjectID: UUID,
            Gain: number
        } = {
            ObjectID: UUID.zero(),
            Gain: 0
        };
        newObjDataBlock['ObjectID'] = new UUID(buf, pos);
        pos += 16;
        newObjDataBlock['Gain'] = buf.readFloatLE(pos);
        pos += 4;
        this.DataBlock = newObjDataBlock;
        return pos - startPos;
    }
}

