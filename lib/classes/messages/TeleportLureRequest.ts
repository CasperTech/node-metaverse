// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class TeleportLureRequestMessage implements MessageBase
{
    name = 'TeleportLureRequest';
    messageFlags = MessageFlags.FrequencyLow;
    id = Message.TeleportLureRequest;

    Info: {
        AgentID: UUID;
        SessionID: UUID;
        LureID: UUID;
        TeleportFlags: number;
    };

    getSize(): number
    {
        return 52;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        this.Info['AgentID'].writeToBuffer(buf, pos);
        pos += 16;
        this.Info['SessionID'].writeToBuffer(buf, pos);
        pos += 16;
        this.Info['LureID'].writeToBuffer(buf, pos);
        pos += 16;
        buf.writeUInt32LE(this.Info['TeleportFlags'], pos);
        pos += 4;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjInfo: {
            AgentID: UUID,
            SessionID: UUID,
            LureID: UUID,
            TeleportFlags: number
        } = {
            AgentID: UUID.zero(),
            SessionID: UUID.zero(),
            LureID: UUID.zero(),
            TeleportFlags: 0
        };
        newObjInfo['AgentID'] = new UUID(buf, pos);
        pos += 16;
        newObjInfo['SessionID'] = new UUID(buf, pos);
        pos += 16;
        newObjInfo['LureID'] = new UUID(buf, pos);
        pos += 16;
        newObjInfo['TeleportFlags'] = buf.readUInt32LE(pos);
        pos += 4;
        this.Info = newObjInfo;
        return pos - startPos;
    }
}

