// This file has been automatically generated by writeMessageClasses.js

import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class LayerDataMessage implements MessageBase
{
    name = 'LayerData';
    messageFlags = MessageFlags.Trusted | MessageFlags.FrequencyHigh;
    id = Message.LayerData;

    LayerID: {
        Type: number;
    };
    LayerData: {
        Data: Buffer;
    };

    getSize(): number
    {
        return (this.LayerData['Data'].length + 2) + 1;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        buf.writeUInt8(this.LayerID['Type'], pos++);
        buf.writeUInt16LE(this.LayerData['Data'].length, pos);
        pos += 2;
        this.LayerData['Data'].copy(buf, pos);
        pos += this.LayerData['Data'].length;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjLayerID: {
            Type: number
        } = {
            Type: 0
        };
        newObjLayerID['Type'] = buf.readUInt8(pos++);
        this.LayerID = newObjLayerID;
        const newObjLayerData: {
            Data: Buffer
        } = {
            Data: Buffer.allocUnsafe(0)
        };
        varLength = buf.readUInt16LE(pos);
        pos += 2;
        newObjLayerData['Data'] = buf.slice(pos, pos + varLength);
        pos += varLength;
        this.LayerData = newObjLayerData;
        return pos - startPos;
    }
}

