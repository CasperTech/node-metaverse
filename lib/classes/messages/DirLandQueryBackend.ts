// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class DirLandQueryBackendMessage implements MessageBase
{
    name = 'DirLandQueryBackend';
    messageFlags = MessageFlags.Trusted | MessageFlags.Zerocoded | MessageFlags.FrequencyLow;
    id = Message.DirLandQueryBackend;

    AgentData: {
        AgentID: UUID;
    };
    QueryData: {
        QueryID: UUID;
        QueryFlags: number;
        SearchType: number;
        Price: number;
        Area: number;
        QueryStart: number;
        EstateID: number;
        Godlike: boolean;
    };

    getSize(): number
    {
        return 57;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        this.AgentData['AgentID'].writeToBuffer(buf, pos);
        pos += 16;
        this.QueryData['QueryID'].writeToBuffer(buf, pos);
        pos += 16;
        buf.writeUInt32LE(this.QueryData['QueryFlags'], pos);
        pos += 4;
        buf.writeUInt32LE(this.QueryData['SearchType'], pos);
        pos += 4;
        buf.writeInt32LE(this.QueryData['Price'], pos);
        pos += 4;
        buf.writeInt32LE(this.QueryData['Area'], pos);
        pos += 4;
        buf.writeInt32LE(this.QueryData['QueryStart'], pos);
        pos += 4;
        buf.writeUInt32LE(this.QueryData['EstateID'], pos);
        pos += 4;
        buf.writeUInt8((this.QueryData['Godlike']) ? 1 : 0, pos++);
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjAgentData: {
            AgentID: UUID
        } = {
            AgentID: UUID.zero()
        };
        newObjAgentData['AgentID'] = new UUID(buf, pos);
        pos += 16;
        this.AgentData = newObjAgentData;
        const newObjQueryData: {
            QueryID: UUID,
            QueryFlags: number,
            SearchType: number,
            Price: number,
            Area: number,
            QueryStart: number,
            EstateID: number,
            Godlike: boolean
        } = {
            QueryID: UUID.zero(),
            QueryFlags: 0,
            SearchType: 0,
            Price: 0,
            Area: 0,
            QueryStart: 0,
            EstateID: 0,
            Godlike: false
        };
        newObjQueryData['QueryID'] = new UUID(buf, pos);
        pos += 16;
        newObjQueryData['QueryFlags'] = buf.readUInt32LE(pos);
        pos += 4;
        newObjQueryData['SearchType'] = buf.readUInt32LE(pos);
        pos += 4;
        newObjQueryData['Price'] = buf.readInt32LE(pos);
        pos += 4;
        newObjQueryData['Area'] = buf.readInt32LE(pos);
        pos += 4;
        newObjQueryData['QueryStart'] = buf.readInt32LE(pos);
        pos += 4;
        newObjQueryData['EstateID'] = buf.readUInt32LE(pos);
        pos += 4;
        newObjQueryData['Godlike'] = (buf.readUInt8(pos++) === 1);
        this.QueryData = newObjQueryData;
        return pos - startPos;
    }
}

