// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class StartAuctionMessage implements MessageBase
{
    name = 'StartAuction';
    messageFlags = MessageFlags.Trusted | MessageFlags.FrequencyLow;
    id = Message.StartAuction;

    AgentData: {
        AgentID: UUID;
    };
    ParcelData: {
        ParcelID: UUID;
        SnapshotID: UUID;
        Name: Buffer;
    };

    getSize(): number
    {
        return (this.ParcelData['Name'].length + 1) + 48;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        this.AgentData['AgentID'].writeToBuffer(buf, pos);
        pos += 16;
        this.ParcelData['ParcelID'].writeToBuffer(buf, pos);
        pos += 16;
        this.ParcelData['SnapshotID'].writeToBuffer(buf, pos);
        pos += 16;
        buf.writeUInt8(this.ParcelData['Name'].length, pos++);
        this.ParcelData['Name'].copy(buf, pos);
        pos += this.ParcelData['Name'].length;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjAgentData: {
            AgentID: UUID
        } = {
            AgentID: UUID.zero()
        };
        newObjAgentData['AgentID'] = new UUID(buf, pos);
        pos += 16;
        this.AgentData = newObjAgentData;
        const newObjParcelData: {
            ParcelID: UUID,
            SnapshotID: UUID,
            Name: Buffer
        } = {
            ParcelID: UUID.zero(),
            SnapshotID: UUID.zero(),
            Name: Buffer.allocUnsafe(0)
        };
        newObjParcelData['ParcelID'] = new UUID(buf, pos);
        pos += 16;
        newObjParcelData['SnapshotID'] = new UUID(buf, pos);
        pos += 16;
        varLength = buf.readUInt8(pos++);
        newObjParcelData['Name'] = buf.slice(pos, pos + (varLength - 1));
        pos += varLength;
        this.ParcelData = newObjParcelData;
        return pos - startPos;
    }
}

