// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class EmailMessageRequestMessage implements MessageBase
{
    name = 'EmailMessageRequest';
    messageFlags = MessageFlags.Trusted | MessageFlags.FrequencyLow;
    id = Message.EmailMessageRequest;

    DataBlock: {
        ObjectID: UUID;
        FromAddress: Buffer;
        Subject: Buffer;
    };

    getSize(): number
    {
        return (this.DataBlock['FromAddress'].length + 1 + this.DataBlock['Subject'].length + 1) + 16;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        this.DataBlock['ObjectID'].writeToBuffer(buf, pos);
        pos += 16;
        buf.writeUInt8(this.DataBlock['FromAddress'].length, pos++);
        this.DataBlock['FromAddress'].copy(buf, pos);
        pos += this.DataBlock['FromAddress'].length;
        buf.writeUInt8(this.DataBlock['Subject'].length, pos++);
        this.DataBlock['Subject'].copy(buf, pos);
        pos += this.DataBlock['Subject'].length;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjDataBlock: {
            ObjectID: UUID,
            FromAddress: Buffer,
            Subject: Buffer
        } = {
            ObjectID: UUID.zero(),
            FromAddress: Buffer.allocUnsafe(0),
            Subject: Buffer.allocUnsafe(0)
        };
        newObjDataBlock['ObjectID'] = new UUID(buf, pos);
        pos += 16;
        varLength = buf.readUInt8(pos++);
        newObjDataBlock['FromAddress'] = buf.slice(pos, pos + varLength);
        pos += varLength;
        varLength = buf.readUInt8(pos++);
        newObjDataBlock['Subject'] = buf.slice(pos, pos + varLength);
        pos += varLength;
        this.DataBlock = newObjDataBlock;
        return pos - startPos;
    }
}

