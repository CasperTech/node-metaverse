// This file has been automatically generated by writeMessageClasses.js

import {Vector4} from '../Vector4';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class CameraConstraintMessage implements MessageBase
{
    name = 'CameraConstraint';
    messageFlags = MessageFlags.Trusted | MessageFlags.Zerocoded | MessageFlags.FrequencyHigh;
    id = Message.CameraConstraint;

    CameraCollidePlane: {
        Plane: Vector4;
    };

    getSize(): number
    {
        return 16;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        this.CameraCollidePlane['Plane'].writeToBuffer(buf, pos);
        pos += 16;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjCameraCollidePlane: {
            Plane: Vector4
        } = {
            Plane: Vector4.getZero()
        };
        newObjCameraCollidePlane['Plane'] = new Vector4(buf, pos);
        pos += 16;
        this.CameraCollidePlane = newObjCameraCollidePlane;
        return pos - startPos;
    }
}

