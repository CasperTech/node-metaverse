// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class RegionPresenceRequestByRegionIDMessage implements MessageBase
{
    name = 'RegionPresenceRequestByRegionID';
    messageFlags = MessageFlags.Trusted | MessageFlags.FrequencyLow;
    id = Message.RegionPresenceRequestByRegionID;

    RegionData: {
        RegionID: UUID;
    }[];

    getSize(): number
    {
        return ((16) * this.RegionData.length) + 1;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        const count = this.RegionData.length;
        buf.writeUInt8(this.RegionData.length, pos++);
        for (let i = 0; i < count; i++)
        {
            this.RegionData[i]['RegionID'].writeToBuffer(buf, pos);
            pos += 16;
        }
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const count = buf.readUInt8(pos++);
        this.RegionData = [];
        for (let i = 0; i < count; i++)
        {
            const newObjRegionData: {
                RegionID: UUID
            } = {
                RegionID: UUID.zero()
            };
            newObjRegionData['RegionID'] = new UUID(buf, pos);
            pos += 16;
            this.RegionData.push(newObjRegionData);
        }
        return pos - startPos;
    }
}

