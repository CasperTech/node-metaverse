// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class CreateTrustedCircuitMessage implements MessageBase
{
    name = 'CreateTrustedCircuit';
    messageFlags = MessageFlags.FrequencyLow;
    id = Message.CreateTrustedCircuit;

    DataBlock: {
        EndPointID: UUID;
        Digest: Buffer;
    };

    getSize(): number
    {
        return 48;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        this.DataBlock['EndPointID'].writeToBuffer(buf, pos);
        pos += 16;
        this.DataBlock['Digest'].copy(buf, pos);
        pos += 32;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjDataBlock: {
            EndPointID: UUID,
            Digest: Buffer
        } = {
            EndPointID: UUID.zero(),
            Digest: Buffer.allocUnsafe(0)
        };
        newObjDataBlock['EndPointID'] = new UUID(buf, pos);
        pos += 16;
        newObjDataBlock['Digest'] = buf.slice(pos, pos + 32);
        pos += 32;
        this.DataBlock = newObjDataBlock;
        return pos - startPos;
    }
}

