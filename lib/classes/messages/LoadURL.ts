// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class LoadURLMessage implements MessageBase
{
    name = 'LoadURL';
    messageFlags = MessageFlags.Trusted | MessageFlags.FrequencyLow;
    id = Message.LoadURL;

    Data: {
        ObjectName: string;
        ObjectID: UUID;
        OwnerID: UUID;
        OwnerIsGroup: boolean;
        Message: string;
        URL: string;
    };

    getSize(): number
    {
        return (this.Data['ObjectName'].length + 1 + this.Data['Message'].length + 1 + this.Data['URL'].length + 1) + 33;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        buf.writeUInt8(this.Data['ObjectName'].length, pos++);
        buf.write(this.Data['ObjectName'], pos);
        pos += this.Data['ObjectName'].length;
        this.Data['ObjectID'].writeToBuffer(buf, pos);
        pos += 16;
        this.Data['OwnerID'].writeToBuffer(buf, pos);
        pos += 16;
        buf.writeUInt8((this.Data['OwnerIsGroup']) ? 1 : 0, pos++);
        buf.writeUInt8(this.Data['Message'].length, pos++);
        buf.write(this.Data['Message'], pos);
        pos += this.Data['Message'].length;
        buf.writeUInt8(this.Data['URL'].length, pos++);
        buf.write(this.Data['URL'], pos);
        pos += this.Data['URL'].length;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjData: {
            ObjectName: string,
            ObjectID: UUID,
            OwnerID: UUID,
            OwnerIsGroup: boolean,
            Message: string,
            URL: string
        } = {
            ObjectName: '',
            ObjectID: UUID.zero(),
            OwnerID: UUID.zero(),
            OwnerIsGroup: false,
            Message: '',
            URL: ''
        };
        varLength = buf.readUInt8(pos++);
        newObjData['ObjectName'] = buf.toString('utf8', pos, pos + (varLength - 1));
        pos += varLength;
        newObjData['ObjectID'] = new UUID(buf, pos);
        pos += 16;
        newObjData['OwnerID'] = new UUID(buf, pos);
        pos += 16;
        newObjData['OwnerIsGroup'] = (buf.readUInt8(pos++) === 1);
        varLength = buf.readUInt8(pos++);
        newObjData['Message'] = buf.toString('utf8', pos, pos + (varLength - 1));
        pos += varLength;
        varLength = buf.readUInt8(pos++);
        newObjData['URL'] = buf.toString('utf8', pos, pos + (varLength - 1));
        pos += varLength;
        this.Data = newObjData;
        return pos - startPos;
    }
}

