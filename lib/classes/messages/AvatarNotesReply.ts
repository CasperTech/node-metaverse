// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class AvatarNotesReplyMessage implements MessageBase
{
    name = 'AvatarNotesReply';
    messageFlags = MessageFlags.Trusted | MessageFlags.FrequencyLow;
    id = Message.AvatarNotesReply;

    AgentData: {
        AgentID: UUID;
    };
    Data: {
        TargetID: UUID;
        Notes: Buffer;
    };

    getSize(): number
    {
        return (this.Data['Notes'].length + 2) + 32;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        this.AgentData['AgentID'].writeToBuffer(buf, pos);
        pos += 16;
        this.Data['TargetID'].writeToBuffer(buf, pos);
        pos += 16;
        buf.writeUInt16LE(this.Data['Notes'].length, pos);
        pos += 2;
        this.Data['Notes'].copy(buf, pos);
        pos += this.Data['Notes'].length;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjAgentData: {
            AgentID: UUID
        } = {
            AgentID: UUID.zero()
        };
        newObjAgentData['AgentID'] = new UUID(buf, pos);
        pos += 16;
        this.AgentData = newObjAgentData;
        const newObjData: {
            TargetID: UUID,
            Notes: Buffer
        } = {
            TargetID: UUID.zero(),
            Notes: Buffer.allocUnsafe(0)
        };
        newObjData['TargetID'] = new UUID(buf, pos);
        pos += 16;
        varLength = buf.readUInt16LE(pos);
        pos += 2;
        newObjData['Notes'] = buf.slice(pos, pos + varLength);
        pos += varLength;
        this.Data = newObjData;
        return pos - startPos;
    }
}

