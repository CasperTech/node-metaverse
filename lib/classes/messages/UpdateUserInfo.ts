// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class UpdateUserInfoMessage implements MessageBase
{
    name = 'UpdateUserInfo';
    messageFlags = MessageFlags.FrequencyLow;
    id = Message.UpdateUserInfo;

    AgentData: {
        AgentID: UUID;
        SessionID: UUID;
    };
    UserData: {
        IMViaEMail: boolean;
        DirectoryVisibility: Buffer;
    };

    getSize(): number
    {
        return (this.UserData['DirectoryVisibility'].length + 1) + 33;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        this.AgentData['AgentID'].writeToBuffer(buf, pos);
        pos += 16;
        this.AgentData['SessionID'].writeToBuffer(buf, pos);
        pos += 16;
        buf.writeUInt8((this.UserData['IMViaEMail']) ? 1 : 0, pos++);
        buf.writeUInt8(this.UserData['DirectoryVisibility'].length, pos++);
        this.UserData['DirectoryVisibility'].copy(buf, pos);
        pos += this.UserData['DirectoryVisibility'].length;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjAgentData: {
            AgentID: UUID,
            SessionID: UUID
        } = {
            AgentID: UUID.zero(),
            SessionID: UUID.zero()
        };
        newObjAgentData['AgentID'] = new UUID(buf, pos);
        pos += 16;
        newObjAgentData['SessionID'] = new UUID(buf, pos);
        pos += 16;
        this.AgentData = newObjAgentData;
        const newObjUserData: {
            IMViaEMail: boolean,
            DirectoryVisibility: Buffer
        } = {
            IMViaEMail: false,
            DirectoryVisibility: Buffer.allocUnsafe(0)
        };
        newObjUserData['IMViaEMail'] = (buf.readUInt8(pos++) === 1);
        varLength = buf.readUInt8(pos++);
        newObjUserData['DirectoryVisibility'] = buf.slice(pos, pos + (varLength - 1));
        pos += varLength;
        this.UserData = newObjUserData;
        return pos - startPos;
    }
}

