// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class MuteListUpdateMessage implements MessageBase
{
    name = 'MuteListUpdate';
    messageFlags = MessageFlags.Trusted | MessageFlags.FrequencyLow;
    id = Message.MuteListUpdate;

    MuteData: {
        AgentID: UUID;
        Filename: Buffer;
    };

    getSize(): number
    {
        return (this.MuteData['Filename'].length + 1) + 16;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        this.MuteData['AgentID'].writeToBuffer(buf, pos);
        pos += 16;
        buf.writeUInt8(this.MuteData['Filename'].length, pos++);
        this.MuteData['Filename'].copy(buf, pos);
        pos += this.MuteData['Filename'].length;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjMuteData: {
            AgentID: UUID,
            Filename: Buffer
        } = {
            AgentID: UUID.zero(),
            Filename: Buffer.allocUnsafe(0)
        };
        newObjMuteData['AgentID'] = new UUID(buf, pos);
        pos += 16;
        varLength = buf.readUInt8(pos++);
        newObjMuteData['Filename'] = buf.slice(pos, pos + (varLength - 1));
        pos += varLength;
        this.MuteData = newObjMuteData;
        return pos - startPos;
    }
}

