// This file has been automatically generated by writeMessageClasses.js

import {UUID} from '../UUID';
import {MessageFlags} from '../../enums/MessageFlags';
import {MessageBase} from '../MessageBase';
import {Message} from '../../enums/Message';

export class UserInfoReplyMessage implements MessageBase
{
    name = 'UserInfoReply';
    messageFlags = MessageFlags.FrequencyLow;
    id = Message.UserInfoReply;

    AgentData: {
        AgentID: UUID;
    };
    UserData: {
        IMViaEMail: boolean;
        DirectoryVisibility: Buffer;
        EMail: Buffer;
    };

    getSize(): number
    {
        return (this.UserData['DirectoryVisibility'].length + 1 + this.UserData['EMail'].length + 2) + 17;
    }

    writeToBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        this.AgentData['AgentID'].writeToBuffer(buf, pos);
        pos += 16;
        buf.writeUInt8((this.UserData['IMViaEMail']) ? 1 : 0, pos++);
        buf.writeUInt8(this.UserData['DirectoryVisibility'].length, pos++);
        this.UserData['DirectoryVisibility'].copy(buf, pos);
        pos += this.UserData['DirectoryVisibility'].length;
        buf.writeUInt16LE(this.UserData['EMail'].length, pos);
        pos += 2;
        this.UserData['EMail'].copy(buf, pos);
        pos += this.UserData['EMail'].length;
        return pos - startPos;
    }

    readFromBuffer(buf: Buffer, pos: number): number
    {
        const startPos = pos;
        let varLength = 0;
        const newObjAgentData: {
            AgentID: UUID
        } = {
            AgentID: UUID.zero()
        };
        newObjAgentData['AgentID'] = new UUID(buf, pos);
        pos += 16;
        this.AgentData = newObjAgentData;
        const newObjUserData: {
            IMViaEMail: boolean,
            DirectoryVisibility: Buffer,
            EMail: Buffer
        } = {
            IMViaEMail: false,
            DirectoryVisibility: Buffer.allocUnsafe(0),
            EMail: Buffer.allocUnsafe(0)
        };
        newObjUserData['IMViaEMail'] = (buf.readUInt8(pos++) === 1);
        varLength = buf.readUInt8(pos++);
        newObjUserData['DirectoryVisibility'] = buf.slice(pos, pos + varLength);
        pos += varLength;
        varLength = buf.readUInt16LE(pos);
        pos += 2;
        newObjUserData['EMail'] = buf.slice(pos, pos + varLength);
        pos += varLength;
        this.UserData = newObjUserData;
        return pos - startPos;
    }
}

