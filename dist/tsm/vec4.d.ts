/// <reference path="common.d.ts" />
import { mat4 } from './mat4';
export declare class vec4 {
    static zero: vec4;
    private values;
    static mix(vector: vec4, vector2: vec4, time: number, dest?: vec4 | null): vec4;
    static sum(vector: vec4, vector2: vec4, dest?: vec4 | null): vec4;
    static difference(vector: vec4, vector2: vec4, dest?: vec4 | null): vec4;
    static product(vector: vec4, vector2: vec4, dest?: vec4 | null): vec4;
    static quotient(vector: vec4, vector2: vec4, dest?: vec4 | null): vec4;
    x: number;
    y: number;
    z: number;
    w: number;
    xy: number[];
    xyz: number[];
    xyzw: number[];
    r: number;
    g: number;
    b: number;
    a: number;
    rg: number[];
    rgb: number[];
    rgba: number[];
    constructor(values?: number[] | null);
    at(index: number): number;
    reset(): void;
    copy(dest?: vec4 | null): vec4;
    negate(dest?: vec4 | null): vec4;
    equals(vector: vec4, threshold?: number): boolean;
    length(): number;
    squaredLength(): number;
    add(vector: vec4): vec4;
    subtract(vector: vec4): vec4;
    multiply(vector: vec4): vec4;
    divide(vector: vec4): vec4;
    scale(value: number, dest?: vec4 | null): vec4;
    normalize(dest?: vec4 | null): vec4;
    multiplyMat4(matrix: mat4, dest?: vec4 | null): vec4;
}
