import { Circuit } from './Circuit';
import { Agent } from './Agent';
import { Caps } from './Caps';
import { Comms } from './Comms';
import { ClientEvents } from './ClientEvents';
import { IObjectStore } from './interfaces/IObjectStore';
import { BotOptionFlags, RegionFlags, UUID } from '..';
import { RegionHandshakeMessage } from './messages/RegionHandshake';
import * as Long from 'long';
export declare class Region {
    regionName: string;
    regionOwner: UUID;
    regionID: UUID;
    regionHandle: Long;
    xCoordinate: number;
    yCoordinate: number;
    estateID: number;
    parentEstateID: number;
    regionFlags: RegionFlags;
    mapImage: UUID;
    simAccess: number;
    maxAgents: number;
    billableFactor: number;
    objectBonusFactor: number;
    waterHeight: number;
    terrainRaiseLimit: number;
    terrainLowerLimit: number;
    pricePerMeter: number;
    redirectGridX: number;
    redirectGridY: number;
    useEstateSun: boolean;
    sunHour: number;
    productSKU: string;
    productName: string;
    maxAgents32: number;
    hardMaxAgents: number;
    hardMaxObjects: number;
    cacheID: UUID;
    cpuClassID: number;
    cpuRatio: number;
    coloName: string;
    terrainBase0: UUID;
    terrainBase1: UUID;
    terrainBase2: UUID;
    terrainBase3: UUID;
    terrainDetail0: UUID;
    terrainDetail1: UUID;
    terrainDetail2: UUID;
    terrainDetail3: UUID;
    terrainStartHeight00: number;
    terrainStartHeight01: number;
    terrainStartHeight10: number;
    terrainStartHeight11: number;
    terrainHeightRange00: number;
    terrainHeightRange01: number;
    terrainHeightRange10: number;
    terrainHeightRange11: number;
    circuit: Circuit;
    objects: IObjectStore;
    caps: Caps;
    comms: Comms;
    clientEvents: ClientEvents;
    options: BotOptionFlags;
    agent: Agent;
    constructor(agent: Agent, clientEvents: ClientEvents, options: BotOptionFlags);
    activateCaps(seedURL: string): void;
    handshake(handshake: RegionHandshakeMessage): Promise<void>;
    shutdown(): void;
}
